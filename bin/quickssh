#!/bin/bash

# Quick SSH
# Used to quickly connect to SSH services
# Supporting 1password CLI for SSH Keys and root login passwords

# For Mosh:
# Ensure that you have Mosh installed on both your local machine
# and the remote host to use this feature. You can install Mosh
# using the package manager for your system:
#     For Ubuntu/Debian: sudo apt-get install mosh
#     For CentOS/RHEL: sudo yum install mosh
#     For Fedora: sudo dnf install mosh
#     For macOS: brew install mosh
#     For Arch Linux: sudo pacman -S mosh
# Also, make sure the necessary UDP ports (usually 60000-61000)
# are open on the remote host's firewall.

echo -e "\033[0;33m"
cat << "EOF"
              _      _            _  x x
   __ _ _   _(_) ___| | _____ ___| |__x 
  / _` | | | | |/ __| |/ / __/ __| '_ \ 
 | (_| | |_| | | (__|   <\__ \__ \ | | |
  \__, |\__,_|_|\___|_|\_\___/___/_| |_|
     |_|                                

EOF

echo "  quickssh the SSH swiss army knife."
echo -e "\033[0m"
echo " "

# Load hosts from a separate file
if [ -e "$EXTRASPATH/quickssh_hosts.sh" ]; then
  source "$EXTRASPATH/quickssh_hosts.sh"
else
  echo "Error: quickssh_hosts.sh not found"
  echo "We need a file with host configurations"
  exit 1
fi

# Function to get the password from 1Password
function get_password() {
    local alias=$1
    # Replace 'op_account' with your 1Password account name
    # Replace 'item_name_prefix' with the prefix of the item names stored in 1Password
    op item get "ssh_$alias" --account op_account --fields password | tr -d '\n'
}

# Function to connect to a host using its alias
# Function to connect to a host using its alias
function quicksshconnect() {
    local alias=$1
    local host_info_var="quickssh_hosts_${alias}"
    local host_info=${!host_info_var}

    if [[ -z $host_info ]]; then
        echo "Host alias not found ($alias)... exiting!"
        return 1
    fi

    local user=$(echo $host_info | cut -d: -f1)
    local hostname=$(echo $host_info | cut -d: -f2)
    local port=$(echo $host_info | cut -d: -f3)
    local password=$(echo $host_info | cut -d: -f4)

    # Set default port if not provided
    if [ -z "$port" ]; then
        port=22
    fi

    # Get password from 1Password if needed
    if [ "$password" == "\$1password" ]; then
        echo "Fetching password from 1password vault"
        password=$(get_password $alias)
        if [ -z "$password" ]; then
            echo "Issue locating password for item (ssh_$alias) in 1password... exiting!"
            return 1
        fi
    fi

    if [ -n "$password" ]; then
        echo $password | xclip -selection clipboard
        echo "Password was copied - clipboard will be wiped in 30 seconds"
        (
          sleep 30
          echo "" | xclip -selection clipboard
          echo "Clipboard reset."
        ) &
    fi

    # Prepare connection command
    local conn_prefix=""
    local conn_suffix=""
    if [[ $use_mosh == "true" ]]; then
        conn_prefix="mosh --ssh=\"ssh -p $port\""
    else
        conn_prefix="ssh -p $port"
    fi

    if [[ $use_tmux == "true" ]]; then
        conn_suffix="'tmux attach || tmux new-session'"
    elif [[ $use_screen == "true" ]]; then
        conn_suffix="'screen -xRR'"
    elif [[ -n $local_port ]] && [[ -n $destination_port ]]; then
        if [[ $use_mosh == "true" ]]; then
            echo "Port forwarding not supported with Mosh... exiting!"
            return 1
        fi
        conn_prefix+=" -L $local_port:localhost:$destination_port"
    fi

    # Connect
    if [ -z "$user" ]; then
        echo -e "\033[0;33m☎️  Connecting to $alias: $hostname (Port: $port)\033[0m"
        eval "$conn_prefix $hostname $conn_suffix"
    else
        echo -e "\033[0;33m☎️  Connecting to $alias: $user@$hostname (Port: $port)\033[0m"
        eval "$conn_prefix $user@$hostname $conn_suffix"
    fi
}

# Main script
use_mosh=false
use_tmux=false
use_screen=false
while getopts ":mstl:d:" option; do
    case $option in
        m) use_mosh=true ;;
        s) use_screen=true ;;
        t) use_tmux=true ;;
        l) local_port=$OPTARG ;;
        d) destination_port=$OPTARG ;;
        *) echo "Invalid option"
           exit 1;;
    esac
done

shift $((OPTIND-1))
host_alias=$1

if [[ $# -ne 1 ]]; then
    echo "Usage: quickssh [-m] [-s] [-t] [-l local_port] [-d destination_port] <host-alias>"
    echo "  -m: Use Mosh instead of SSH"
    echo "  -s: Use Screen with SSH"
    echo "  -t: Use Tmux with SSH"
    echo "Available quickssh host aliases:"
    for key in "${quickssh_hosts[@]}"; do
        echo "  - $key"
    done
else
    quicksshconnect $1
fi
